#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro PARK_HOTEND]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y0 Z175 

#####################################################################
# Clean Nozzle
#####################################################################

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 310
variable_start_y: 350
variable_start_z: 0.5
variable_wipe_dist: -45
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 10

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500
 #M83
 #G1 -E0.5 F500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

[gcode_macro G32]
gcode:
    CHAMBER_LED_PCT_IDLE
    STATUS_HOMING
    G90
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    G28
    STATUS_OFF
    CHAMBER_LED_OFF

[gcode_macro PRINT_PREGAME]
gcode:
    CHAMBER_LED_PCT_IDLE
    STATUS_HOMING
    G90
    G28
    STATUS_CLEANING
    CLEAN_NOZZLE
    QUAD_GANTRY_LEVEL
    STATUS_LEVELING
    G28
    BED_MESH_PROFILE LOAD=default
    ATTACH_PROBE
    STATUS_CLEANING
    CLEAN_NOZZLE
    STATUS_CALIBRATING_Z
    CALIBRATE_Z
    DOCK_PROBE
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    STATUS_HEATING
    # Use absolute coordinates
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    # Home the printer
    PRINT_PREGAME                            ; home all axes, qgl, clean nozzle, autoz
    # Wait for bed to reach temperature
    FS_ENABLE
    CHAMBER_LED_PCT_PRINT
    STATUS_PRINTING 

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    FS_DISABLE
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    CHAMBER_LED_OFF
    STATUS_OFF
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro CHAMBER_LED_ON]
gcode:
    SET_PIN PIN=caselight VALUE=1
[gcode_macro CHAMBER_LED_PCT_IDLE]
gcode:
    SET_PIN PIN=caselight VALUE=0.06
[gcode_macro CHAMBER_LED_PCT_PRINT]
gcode:
    SET_PIN PIN=caselight VALUE=0.4
[gcode_macro CHAMBER_LED_OFF]
gcode:
    SET_PIN PIN=caselight VALUE=0
